{
    "inputs": [
        {
            "required": true,
            "type": "string",
            "name": "inputVolume",
            "default-value": "",
            "description": "Input volume to be filtered"
        },
        {
            "required": true,
            "type": "string",
            "name": "outputVolume",
            "default-value": "",
            "description": "Output filtered"
        }
    ],
    "description": "GrayscaleFillholeImageFilter fills holes in a grayscale image.  Holes are local minima in the grayscale topography that are not connected to boundaries of the image. Gray level values adjacent to a hole are extrapolated across the hole.\n\nThis filter is used to smooth over local minima without affecting the values of local maxima.  If you take the difference between the output of this filter and the original image (and perhaps threshold the difference above a small value), you'll obtain a map of the local minima.\n\nThis filter uses the itkGrayscaleGeodesicErodeImageFilter.  It provides its own input as the \"mask\" input to the geodesic erosion.  The \"marker\" image for the geodesic erosion is constructed such that boundary pixels match the boundary pixels of the input image and the interior pixels are set to the maximum pixel value in the input image.\n\n Geodesic morphology and the Fillhole algorithm is described in Chapter 6 of Pierre Soille's book \"Morphological Image Analysis: Principles and Applications\", Second Edition, Springer, 2003. \n\n A companion filter, Grayscale Grind Peak, removes peaks in grayscale images.",
    "image": "quay.io/fedorov/slicerdockers:4.8.1",
    "info-url": "http://wiki.slicer.org/slicerWiki/index.php/Documentation/Nightly/Modules/GrayscaleFillHoleImageFilter",
    "name": "Grayscale Fill Hole Image Filter",
    "command-line": "/opt/slicer/Slicer --launch GrayscaleFillHoleImageFilter -- #inputVolume# #outputVolume#",
    "xnat": [],
    "label": "Grayscale Fill Hole Image Filter",
    "version": "0.1.0.$Revision: 24799 $(alpha)",
    "schema-version": "1.0",
    "type": "docker"
}