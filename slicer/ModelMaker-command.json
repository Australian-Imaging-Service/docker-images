{
    "inputs": [
        {
            "command-line-flag": "--color",
            "name": "ColorTable",
            "default-value": "",
            "required": true,
            "type": "string",
            "description": "Color table to make labels to colors and objects"
        },
        {
            "command-line-flag": "--modelSceneFile",
            "name": "ModelSceneFile",
            "default-value": "models.mrml",
            "required": true,
            "type": "string",
            "description": "Generated models, under a model hierarchy node. Models are imported into Slicer under a model hierarchy node, and their colors are set by the color table associated with the input label map volume. The model hierarchy node must be created before running the model maker, by selecting Create New ModelHierarchy from the Models drop down menu. If you're running from the command line, a model hierarchy node in a new mrml scene will be created for you."
        },
        {
            "command-line-flag": "--name",
            "name": "Name",
            "default-value": "Model",
            "required": true,
            "type": "string",
            "description": "Name to use for this model. Any text entered in the entry box will be the starting string for the created model file names. The label number and the color name will also be part of the file name. If making multiple models, use this as a prefix to the label and color name."
        },
        {
            "name": "GenerateAll",
            "true-value": "--generateAll",
            "required": true,
            "default-value": "true",
            "type": "boolean",
            "description": "Generate models for all labels in the input volume. select this option if you want to create all models that correspond to all values in a labelmap volume (using the Joint Smoothing option below is useful with this option). Ignores Labels, Start Label, End Label settings. Skips label 0."
        },
        {
            "command-line-flag": "---labels",
            "name": "Labels",
            "default-value": "",
            "required": true,
            "type": "number",
            "description": "A comma separated list of label values from which to make models. f you specify a list of Labels, it will override any start/end label settings. If you click Generate All Models it will override the list of labels and any start/end label settings."
        },
        {
            "command-line-flag": "--start",
            "name": "StartLabel",
            "default-value": "-1",
            "required": true,
            "type": "number",
            "description": "If you want to specify a continuous range of labels from which to generate models, enter the lower label here. Voxel value from which to start making models. Used instead of the label list to specify a range (make sure the label list is empty or it will over ride this)."
        },
        {
            "command-line-flag": "--end",
            "name": "EndLabel",
            "default-value": "-1",
            "required": true,
            "type": "number",
            "description": "If you want to specify a continuous range of labels from which to generate models, enter the higher label here. Voxel value up to which to continue making models. Skip any values with zero voxels."
        },
        {
            "name": "SkipUnNamed",
            "true-value": "--skipUnNamed",
            "required": true,
            "default-value": "true",
            "type": "boolean",
            "description": "Select this to not generate models from labels that do not have names defined in the color look up table associated with the input label map. If true, only models which have an entry in the color table will be generated.  If false, generate all models that exist within the label range."
        },
        {
            "name": "JointSmoothing",
            "true-value": "--jointsmooth",
            "required": true,
            "default-value": "false",
            "type": "boolean",
            "description": "This will ensure that all resulting models fit together smoothly, like jigsaw puzzle pieces. Otherwise the models will be smoothed independently and may overlap."
        },
        {
            "command-line-flag": "--smooth",
            "name": "Smooth",
            "default-value": "10",
            "required": true,
            "type": "number",
            "description": "Here you can set the number of smoothing iterations for Laplacian smoothing, or the degree of the polynomial approximating the windowed Sinc function. Use 0 if you wish no smoothing. "
        },
        {
            "command-line-flag": "--filtertype",
            "name": "FilterType",
            "default-value": "Sinc",
            "required": true,
            "type": "string",
            "description": "You can control the type of smoothing done on the models by selecting a filter type of either Sinc or Laplacian."
        },
        {
            "command-line-flag": "--decimate",
            "name": "Decimate",
            "default-value": "0.25",
            "required": true,
            "type": "number",
            "description": "Chose the target reduction in number of polygons as a decimal percentage (between 0 and 1) of the number of polygons. Specifies the percentage of triangles to be removed. For example, 0.1 means 10% reduction and 0.9 means 90% reduction."
        },
        {
            "name": "SplitNormals",
            "true-value": "--splitnormals",
            "required": true,
            "default-value": "true",
            "type": "boolean",
            "description": "Splitting normals is useful for visualizing sharp features. However it creates holes in surfaces which affects measurements."
        },
        {
            "name": "PointNormals",
            "true-value": "--pointnormals",
            "required": true,
            "default-value": "true",
            "type": "boolean",
            "description": "Turn this flag on if you wish to calculate the normal vectors for the points."
        },
        {
            "name": "Pad",
            "true-value": "--pad",
            "required": true,
            "default-value": "true",
            "type": "boolean",
            "description": "Pad the input volume with zero value voxels on all 6 faces in order to ensure the production of closed surfaces. Sets the origin translation and extent translation so that the models still line up with the unpadded input volume."
        },
        {
            "command-line-flag": "--modelHierarchyFile",
            "name": "ModelHierarchyFile",
            "default-value": "",
            "required": true,
            "type": "string",
            "description": "A mrml file that contains a template model hierarchy tree with a hierarchy node per color used in the input volume's color table. Color names used for the models are matched to template hierarchy names to create a multi level output tree. Create a hierarchy in the Models GUI and save a scene, then clean it up to remove everything but the model hierarchy and display nodes."
        },
        {
            "name": "SaveIntermediateModels",
            "true-value": "saveIntermediateModels",
            "required": true,
            "default-value": "false",
            "type": "boolean",
            "description": "You can save a copy of the models after each of the intermediate steps (marching cubes, smoothing, and decimation if not joint smoothing, otherwise just after decimation). These intermediate models are not saved in the mrml file, you have to load them manually after turning off deleting temporary files in they python console (View ->Python Interactor) using the following command slicer.modules.modelmaker.cliModuleLogic().DeleteTemporaryFilesOff()."
        },
        {
            "name": "debug",
            "true-value": "--debug",
            "required": true,
            "default-value": "false",
            "type": "boolean",
            "description": "turn this flag on in order to see debugging output (look in the Error Log window that is accessed via the View menu)"
        },
        {
            "required": true,
            "type": "string",
            "name": "InputVolume",
            "default-value": "",
            "description": "Input label map. The Input Volume drop down menu is populated with the label map volumes that are present in the scene, select one from which to generate models."
        }
    ],
    "description": "Create 3D surface models from segmented data.<p>Models are imported into Slicer under a model hierarchy node in a MRML scene. The model colors are set by the color table associated with the input volume (these colours will only be visible if you load the model scene file).</p><p><b>IO:</b></p><p>Specify an <i>Input Volume</i> that is a segmented label map volume. Create a new <i>Models</i> hierarchy to provide a structure to contain the return models created from the input volume.</p><p><b>Create Multiple:</b></p><p>If you specify a list of <i>Labels</i>, it will over ride any start/end label settings.</p><p>If you click <i>Generate All</i> it will over ride the list of lables and any start/end label settings.</p><p><b>Model Maker Parameters:</b></p><p>You can set the number of smoothing iterations, target reduction in number of polygons (decimal percentage). Use 0 and 1 if you wish no smoothing nor decimation.<br>You can set the flags to split normals or generate point normals in this pane as well.<br>You can save a copy of the models after intermediate steps (marching cubes, smoothing, and decimation if not joint smoothing, otherwise just after decimation); these models are not saved in the mrml file, turn off deleting temporary files first in the python window:<br><i>slicer.modules.modelmaker.cliModuleLogic().DeleteTemporaryFilesOff()</i></p>",
    "image": "quay.io/fedorov/slicerdockers:4.8.1",
    "info-url": "http://wiki.slicer.org/slicerWiki/index.php/Documentation/Nightly/Modules/ModelMaker",
    "name": "Model Maker",
    "command-line": "/opt/slicer/Slicer --launch ModelMaker #ColorTable# #ModelSceneFile# #Name# #GenerateAll# #Labels# #StartLabel# #EndLabel# #SkipUnNamed# #JointSmoothing# #Smooth# #FilterType# #Decimate# #SplitNormals# #PointNormals# #Pad# #ModelHierarchyFile# #SaveIntermediateModels# #debug# #InputVolume#",
    "xnat": [],
    "label": "Model Maker",
    "version": "4.4",
    "schema-version": "1.0",
    "type": "docker"
}